{
    "anagrams.gpto1Mini.black.AnagramsTest": {
        "static": {
            "lines_of_code": 152,
            "num_tests": 9,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 9,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.ai21Jamba15Mini.black.AnagramsTest": {
        "static": {
            "lines_of_code": 55,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.ai21Jamba15Mini.white.AnagramsTest": {
        "static": {
            "lines_of_code": 46,
            "num_tests": 4,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 1,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.ai21Jamba15Large.black.AnagramsTest": {
        "static": {
            "lines_of_code": 94,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 3,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.ai21Jamba15Large.white.AnagramsTest": {
        "static": {
            "lines_of_code": 56,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.claude35Haiku.black.AnagramsTest": {
        "static": {
            "lines_of_code": 88,
            "num_tests": 7,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.claude35Haiku.white.AnagramsTest": {
        "static": {
            "lines_of_code": 80,
            "num_tests": 6,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.claude35Sonnet.black.AnagramsTest": {
        "static": {
            "lines_of_code": 109,
            "num_tests": 7,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.claude35Sonnet.white.AnagramsTest": {
        "static": {
            "lines_of_code": 79,
            "num_tests": 6,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.gpt35Turbo.black.AnagramsTest": {
        "static": {
            "lines_of_code": 49,
            "num_tests": 3,
            "num_assertions": 0
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 2,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.gpt35Turbo.white.AnagramsTest": {
        "static": {
            "lines_of_code": 35,
            "num_tests": 1,
            "num_assertions": 2
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.gpt4oMini.black.AnagramsTest": {
        "static": {
            "lines_of_code": 71,
            "num_tests": 5,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.gpt4oMini.white.AnagramsTest": {
        "static": {
            "lines_of_code": 101,
            "num_tests": 6,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 3,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.gpt4o.black.AnagramsTest": {
        "static": {
            "lines_of_code": 102,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.gpt4o.white.AnagramsTest": {
        "static": {
            "lines_of_code": 104,
            "num_tests": 5,
            "num_assertions": 2
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.gpto1Mini.white.AnagramsTest": {
        "static": {
            "lines_of_code": 127,
            "num_tests": 8,
            "num_assertions": 12
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.metaAI.black.AnagramsTest": {
        "static": {
            "lines_of_code": 60,
            "num_tests": 6,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.metaAI.white.AnagramsTest": {
        "static": {
            "lines_of_code": 57,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.mistralSmall.black.AnagramsTest": {
        "static": {
            "lines_of_code": 69,
            "num_tests": 6,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 4,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.mistralSmall.white.AnagramsTest": {
        "static": {
            "lines_of_code": 75,
            "num_tests": 5,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "anagrams.mistralLarge.black.AnagramsTest": {
        "static": {
            "lines_of_code": 108,
            "num_tests": 4,
            "num_assertions": 2
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "anagrams.mistralLarge.white.AnagramsTest": {
        "static": {
            "lines_of_code": 68,
            "num_tests": 6,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 4,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 57,
                    "covered": 57,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 10,
                    "covered": 10,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.ai21Jamba15Mini.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 36,
            "num_tests": 2,
            "num_assertions": 2
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 0,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.ai21Jamba15Mini.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 60,
            "num_tests": 5,
            "num_assertions": 0
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 3,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 3
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.ai21Jamba15Large.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 6,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 2,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.ai21Jamba15Large.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 5,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.claude35Haiku.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 116,
            "num_tests": 8,
            "num_assertions": 32
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.claude35Haiku.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 133,
            "num_tests": 6,
            "num_assertions": 47
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.claude35Sonnet.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 124,
            "num_tests": 8,
            "num_assertions": 30
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 7,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.claude35Sonnet.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 109,
            "num_tests": 6,
            "num_assertions": 34
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpt35Turbo.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 42,
            "num_tests": 2,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 2,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpt35Turbo.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 34,
            "num_tests": 1,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.gpt4oMini.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 92,
            "num_tests": 5,
            "num_assertions": 20
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpt4oMini.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 82,
            "num_tests": 5,
            "num_assertions": 23
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.gpt4o.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 76,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpt4o.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 134,
            "num_tests": 6,
            "num_assertions": 60
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpto1Mini.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 150,
            "num_tests": 8,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.gpto1Mini.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 151,
            "num_tests": 9,
            "num_assertions": 19
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 9,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.metaAI.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 45,
            "num_tests": 3,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.metaAI.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 72,
            "num_tests": 6,
            "num_assertions": 22
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.mistralSmall.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 39,
            "num_tests": 2,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 2,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.mistralSmall.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 73,
            "num_tests": 4,
            "num_assertions": 28
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 4,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "binaryTree.mistralLarge.black.BinaryTreeTest": {
        "static": {
            "lines_of_code": 134,
            "num_tests": 5,
            "num_assertions": 41
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "binaryTree.mistralLarge.white.BinaryTreeTest": {
        "static": {
            "lines_of_code": 117,
            "num_tests": 5,
            "num_assertions": 41
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 66,
                    "covered": 66,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 4,
                    "covered": 4,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 13,
                    "covered": 13,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 7,
                "survived": 0,
                "no_coverage": 0,
                "detected": 7,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.ai21Jamba15Mini.black.MedianTest": {
        "static": {
            "lines_of_code": 62,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 4,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.ai21Jamba15Mini.white.MedianTest": {
        "static": {
            "lines_of_code": 43,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 132,
                    "missed": 8,
                    "coverage": 94.28571428571428
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 15,
                    "missed": 3,
                    "coverage": 83.33333333333334
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 22,
                    "missed": 3,
                    "coverage": 88.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 8,
                    "missed": 3,
                    "coverage": 72.72727272727273
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.ai21Jamba15Large.black.MedianTest": {
        "static": {
            "lines_of_code": 90,
            "num_tests": 10,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 8,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.ai21Jamba15Large.white.MedianTest": {
        "static": {
            "lines_of_code": 74,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 6,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.claude35Haiku.black.MedianTest": {
        "static": {
            "lines_of_code": 86,
            "num_tests": 10,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 9,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.claude35Haiku.white.MedianTest": {
        "static": {
            "lines_of_code": 89,
            "num_tests": 10,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 8,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.claude35Sonnet.black.MedianTest": {
        "static": {
            "lines_of_code": 89,
            "num_tests": 10,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 10,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 27,
                "survived": 4,
                "no_coverage": 1,
                "detected": 31,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 4,
                    "survived": 4,
                    "detected": 4,
                    "undetected": 4,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 15,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.claude35Sonnet.white.MedianTest": {
        "static": {
            "lines_of_code": 79,
            "num_tests": 10,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 10,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 4,
                "no_coverage": 1,
                "detected": 31,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 4,
                    "survived": 4,
                    "detected": 4,
                    "undetected": 4,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 14,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.gpt35Turbo.black.MedianTest": {
        "static": {
            "lines_of_code": 30,
            "num_tests": 2,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 2,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 132,
                    "missed": 8,
                    "coverage": 94.28571428571428
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 15,
                    "missed": 3,
                    "coverage": 83.33333333333334
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 22,
                    "missed": 3,
                    "coverage": 88.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 8,
                    "missed": 3,
                    "coverage": 72.72727272727273
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 24,
                "survived": 7,
                "no_coverage": 1,
                "detected": 28,
                "undetected": 8
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 3,
                    "survived": 5,
                    "detected": 3,
                    "undetected": 5,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 1,
                    "detected": 15,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 1,
                    "detected": 8,
                    "undetected": 1,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.gpt35Turbo.white.TestMedian": {
        "static": {
            "lines_of_code": 22,
            "num_tests": 1,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 1,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 132,
                    "missed": 8,
                    "coverage": 94.28571428571428
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 15,
                    "missed": 3,
                    "coverage": 83.33333333333334
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 22,
                    "missed": 3,
                    "coverage": 88.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 8,
                    "missed": 3,
                    "coverage": 72.72727272727273
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 24,
                "survived": 7,
                "no_coverage": 1,
                "detected": 28,
                "undetected": 8
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 3,
                    "survived": 5,
                    "detected": 3,
                    "undetected": 5,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 1,
                    "detected": 15,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 1,
                    "detected": 8,
                    "undetected": 1,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.gpt4oMini.black.MedianTest": {
        "static": {
            "lines_of_code": 92,
            "num_tests": 9,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 7,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.gpt4oMini.white.MedianTest": {
        "static": {
            "lines_of_code": 60,
            "num_tests": 10,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 2,
            "tests_failed": 8,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.gpt4o.black.MedianTest": {
        "static": {
            "lines_of_code": 95,
            "num_tests": 10,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 9,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.gpt4o.white.MedianTest": {
        "static": {
            "lines_of_code": 66,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 6,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.gpto1Mini.black.MedianTest": {
        "static": {
            "lines_of_code": 118,
            "num_tests": 11,
            "num_assertions": 12
        },
        "test": {
            "total_tests": 11,
            "tests_passed": 8,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.gpto1Mini.white.MedianTest": {
        "static": {
            "lines_of_code": 106,
            "num_tests": 12,
            "num_assertions": 12
        },
        "test": {
            "total_tests": 12,
            "tests_passed": 11,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.metaAI.black.MedianTest": {
        "static": {
            "lines_of_code": 55,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 132,
                    "missed": 8,
                    "coverage": 94.28571428571428
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 15,
                    "missed": 3,
                    "coverage": 83.33333333333334
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 22,
                    "missed": 3,
                    "coverage": 88.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 8,
                    "missed": 3,
                    "coverage": 72.72727272727273
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 4,
                "no_coverage": 1,
                "detected": 31,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 4,
                    "survived": 3,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 14,
                    "survived": 1,
                    "detected": 15,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.metaAI.white.MedianTest": {
        "static": {
            "lines_of_code": 73,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 132,
                    "missed": 8,
                    "coverage": 94.28571428571428
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 15,
                    "missed": 3,
                    "coverage": 83.33333333333334
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 22,
                    "missed": 3,
                    "coverage": 88.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 8,
                    "missed": 3,
                    "coverage": 72.72727272727273
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 25,
                "survived": 4,
                "no_coverage": 1,
                "detected": 31,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 4,
                    "survived": 3,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 1,
                    "detected": 15,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 6,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.mistralSmall.black.MedianTest": {
        "static": {
            "lines_of_code": 74,
            "num_tests": 8,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 5,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.mistralSmall.white.MedianTest": {
        "static": {
            "lines_of_code": 53,
            "num_tests": 1,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 1,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 4,
                "no_coverage": 1,
                "detected": 31,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 8,
                    "killed": 3,
                    "survived": 4,
                    "detected": 4,
                    "undetected": 4,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 17,
                    "killed": 14,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 9,
                    "killed": 7,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "MedianSortedArrays.mistralLarge.black.MedianTest": {
        "static": {
            "lines_of_code": 102,
            "num_tests": 9,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 6,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 136,
                    "missed": 4,
                    "coverage": 97.14285714285714
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 16,
                    "missed": 2,
                    "coverage": 88.88888888888889
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 24,
                    "missed": 1,
                    "coverage": 96.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 9,
                    "missed": 2,
                    "coverage": 81.81818181818183
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "MedianSortedArrays.mistralLarge.white.MedianTest": {
        "static": {
            "lines_of_code": 72,
            "num_tests": 8,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 7,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 140,
                    "covered": 140,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 18,
                    "covered": 18,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 11,
                    "covered": 11,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.ai21Jamba15Mini.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 55,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 5,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.ai21Jamba15Mini.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 59,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 3,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 32,
                    "missed": 2,
                    "coverage": 94.11764705882352
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.ai21Jamba15Large.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 108,
            "num_tests": 9,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 7,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.ai21Jamba15Large.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 100,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 6,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.claude35Haiku.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 86,
            "num_tests": 8,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 7,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.claude35Haiku.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 96,
            "num_tests": 8,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 36,
                "survived": 1,
                "no_coverage": 0,
                "detected": 39,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 13,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "orangesRotting.claude35Sonnet.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 95,
            "num_tests": 11,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 11,
            "tests_passed": 9,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.claude35Sonnet.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 80,
            "num_tests": 10,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 10,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 36,
                "survived": 1,
                "no_coverage": 0,
                "detected": 39,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 13,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "orangesRotting.gpt35Turbo.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 33,
            "num_tests": 3,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 254,
                    "missed": 3,
                    "coverage": 98.83268482490273
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 32,
                    "missed": 2,
                    "coverage": 94.11764705882352
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 37,
                    "missed": 1,
                    "coverage": 97.36842105263158
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 37,
                "survived": 1,
                "no_coverage": 0,
                "detected": 39,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 14,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "orangesRotting.gpt35Turbo.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 41,
            "num_tests": 4,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 3,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 253,
                    "missed": 4,
                    "coverage": 98.44357976653697
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 37,
                    "missed": 1,
                    "coverage": 97.36842105263158
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 17,
                    "missed": 3,
                    "coverage": 85.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.gpt4oMini.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 76,
            "num_tests": 9,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 8,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 254,
                    "missed": 3,
                    "coverage": 98.83268482490273
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 32,
                    "missed": 2,
                    "coverage": 94.11764705882352
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 37,
                    "missed": 1,
                    "coverage": 97.36842105263158
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.gpt4oMini.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 10,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 5,
            "tests_failed": 5,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 257,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 34,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.gpt4o.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 107,
            "num_tests": 9,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 8,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.gpt4o.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 75,
            "num_tests": 7,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 257,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 34,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 38,
                "survived": 0,
                "no_coverage": 0,
                "detected": 40,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 14,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "orangesRotting.gpto1Mini.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 116,
            "num_tests": 10,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 9,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.gpto1Mini.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 160,
            "num_tests": 15,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 15,
            "tests_passed": 13,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.metaAI.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 58,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.metaAI.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 90,
            "num_tests": 10,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 10,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 36,
                "survived": 1,
                "no_coverage": 0,
                "detected": 39,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 13,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "orangesRotting.mistralSmall.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 88,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 5,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.mistralSmall.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 71,
            "num_tests": 6,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 4,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 255,
                    "missed": 2,
                    "coverage": 99.22178988326849
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 32,
                    "missed": 2,
                    "coverage": 94.11764705882352
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.mistralLarge.black.OrangesRotTest": {
        "static": {
            "lines_of_code": 108,
            "num_tests": 9,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 8,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "orangesRotting.mistralLarge.white.OrangesRotTest": {
        "static": {
            "lines_of_code": 102,
            "num_tests": 8,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 257,
                    "covered": 256,
                    "missed": 1,
                    "coverage": 99.61089494163424
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 19,
                    "missed": 1,
                    "coverage": 95.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 36,
                "survived": 1,
                "no_coverage": 0,
                "detected": 39,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 16,
                    "killed": 13,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 9,
                    "killed": 9,
                    "survived": 0,
                    "detected": 9,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 2,
                    "killed": 1,
                    "survived": 1,
                    "detected": 1,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.ai21Jamba15Mini.black.NqueensTest": {
        "static": {
            "lines_of_code": 39,
            "num_tests": 3,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 2,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.ai21Jamba15Mini.white.NqueensTest": {
        "static": {
            "lines_of_code": 32,
            "num_tests": 3,
            "num_assertions": 2
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 2,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.ai21Jamba15Large.black.NQueensTest": {
        "static": {
            "lines_of_code": 62,
            "num_tests": 6,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 13,
            "tests_passed": 10,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.ai21Jamba15Large.white.NqueensTest": {
        "static": {
            "lines_of_code": 59,
            "num_tests": 5,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.claude35Haiku.black.NqueensTest": {
        "static": {
            "lines_of_code": 96,
            "num_tests": 3,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 6,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.claude35Haiku.white.NqueensTest": {
        "static": {
            "lines_of_code": 101,
            "num_tests": 7,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.claude35Sonnet.black.NqueensTest": {
        "static": {
            "lines_of_code": 109,
            "num_tests": 6,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 14,
            "tests_passed": 14,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.claude35Sonnet.white.NqueensTest": {
        "static": {
            "lines_of_code": 105,
            "num_tests": 7,
            "num_assertions": 13
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpt35Turbo.black.NQueensTest": {
        "static": {
            "lines_of_code": 47,
            "num_tests": 3,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpt35Turbo.white.NQueensTest": {
        "static": {
            "lines_of_code": 66,
            "num_tests": 3,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 2,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.gpt4oMini.black.NqueensTest": {
        "static": {
            "lines_of_code": 83,
            "num_tests": 5,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.gpt4oMini.white.NqueensTest": {
        "static": {
            "lines_of_code": 77,
            "num_tests": 8,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpt4o.black.NqueensTest": {
        "static": {
            "lines_of_code": 87,
            "num_tests": 6,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpt4o.white.NqueensTest": {
        "static": {
            "lines_of_code": 77,
            "num_tests": 8,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpto1Mini.black.NqueensTest": {
        "static": {
            "lines_of_code": 138,
            "num_tests": 7,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.gpto1Mini.white.NQueensTest": {
        "static": {
            "lines_of_code": 166,
            "num_tests": 11,
            "num_assertions": 14
        },
        "test": {
            "total_tests": 11,
            "tests_passed": 9,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.metaAI.black.NqueensTest": {
        "static": {
            "lines_of_code": 54,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 0,
                "no_coverage": 0,
                "detected": 34,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 15,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 4,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "NQueens.metaAI.white.NqueensTest": {
        "static": {
            "lines_of_code": 81,
            "num_tests": 8,
            "num_assertions": 13
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 7,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.mistralSmall.black.NqueensTest": {
        "static": {
            "lines_of_code": 91,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 2,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.mistralSmall.white.NqueensTest": {
        "static": {
            "lines_of_code": 54,
            "num_tests": 6,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.mistralLarge.black.NqueensTest": {
        "static": {
            "lines_of_code": 62,
            "num_tests": 3,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 2,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "NQueens.mistralLarge.white.NqueensTest": {
        "static": {
            "lines_of_code": 89,
            "num_tests": 7,
            "num_assertions": 22
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 6,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 173,
                    "covered": 173,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 30,
                    "covered": 30,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 38,
                    "covered": 38,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 20,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 5,
                    "covered": 5,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.ai21Jamba15Mini.black.TritypTest": {
        "static": {
            "lines_of_code": 38,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 20,
                    "missed": 14,
                    "coverage": 58.82352941176471
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 8,
                    "missed": 11,
                    "coverage": 42.10526315789473
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 7,
                "no_coverage": 11,
                "detected": 26,
                "undetected": 18
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 1,
                    "survived": 7,
                    "detected": 1,
                    "undetected": 9,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 5,
                    "survived": 0,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 3
                }
            }
        }
    },
    "trityp.ai21Jamba15Mini.white.TritypTest": {
        "static": {
            "lines_of_code": 59,
            "num_tests": 10,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 10,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 23,
                    "missed": 11,
                    "coverage": 67.64705882352942
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 11,
                    "missed": 8,
                    "coverage": 57.89473684210527
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 25,
                "survived": 8,
                "no_coverage": 11,
                "detected": 25,
                "undetected": 19
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 0,
                    "survived": 8,
                    "detected": 0,
                    "undetected": 10,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 5,
                    "survived": 0,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 3
                }
            }
        }
    },
    "trityp.ai21Jamba15Large.black.TritypTest": {
        "static": {
            "lines_of_code": 57,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 3,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 66,
                    "missed": 17,
                    "coverage": 79.51807228915662
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 23,
                    "missed": 11,
                    "coverage": 67.64705882352942
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 20,
                    "missed": 3,
                    "coverage": 86.95652173913044
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 9,
                    "missed": 10,
                    "coverage": 47.368421052631575
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.ai21Jamba15Large.white.TritypTest": {
        "static": {
            "lines_of_code": 38,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 21,
                    "missed": 13,
                    "coverage": 61.76470588235294
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 9,
                    "missed": 10,
                    "coverage": 47.368421052631575
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 7,
                "no_coverage": 11,
                "detected": 26,
                "undetected": 18
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 1,
                    "survived": 7,
                    "detected": 1,
                    "undetected": 9,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 5,
                    "survived": 0,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 3
                }
            }
        }
    },
    "trityp.claude35Haiku.black.TriTypTest": {
        "static": {
            "lines_of_code": 53,
            "num_tests": 7,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 78,
                    "missed": 5,
                    "coverage": 93.97590361445783
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 21,
                    "missed": 2,
                    "coverage": 91.30434782608695
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 15,
                    "missed": 4,
                    "coverage": 78.94736842105263
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 34,
                "survived": 9,
                "no_coverage": 1,
                "detected": 34,
                "undetected": 10
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 1,
                    "survived": 9,
                    "detected": 1,
                    "undetected": 9,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 7,
                    "survived": 0,
                    "detected": 7,
                    "undetected": 1,
                    "no_coverage": 1
                }
            }
        }
    },
    "trityp.claude35Haiku.white.TriTypTest": {
        "static": {
            "lines_of_code": 71,
            "num_tests": 8,
            "num_assertions": 21
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 80,
                    "missed": 3,
                    "coverage": 96.3855421686747
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 30,
                    "missed": 4,
                    "coverage": 88.23529411764706
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 22,
                    "missed": 1,
                    "coverage": 95.65217391304348
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 14,
                    "missed": 5,
                    "coverage": 73.68421052631578
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 36,
                "survived": 8,
                "no_coverage": 0,
                "detected": 36,
                "undetected": 8
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 2,
                    "survived": 8,
                    "detected": 2,
                    "undetected": 8,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "trityp.claude35Sonnet.black.TritypTest": {
        "static": {
            "lines_of_code": 65,
            "num_tests": 8,
            "num_assertions": 23
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 80,
                    "missed": 3,
                    "coverage": 96.3855421686747
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 34,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 22,
                    "missed": 1,
                    "coverage": 95.65217391304348
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 18,
                    "missed": 1,
                    "coverage": 94.73684210526315
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 38,
                "survived": 6,
                "no_coverage": 0,
                "detected": 38,
                "undetected": 6
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 4,
                    "survived": 6,
                    "detected": 4,
                    "undetected": 6,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "trityp.claude35Sonnet.white.TritypTest": {
        "static": {
            "lines_of_code": 57,
            "num_tests": 6,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 80,
                    "missed": 3,
                    "coverage": 96.3855421686747
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 22,
                    "missed": 1,
                    "coverage": 95.65217391304348
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 15,
                    "missed": 4,
                    "coverage": 78.94736842105263
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 38,
                "survived": 6,
                "no_coverage": 0,
                "detected": 38,
                "undetected": 6
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 4,
                    "survived": 6,
                    "detected": 4,
                    "undetected": 6,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "trityp.gpt35Turbo.black.TritypTest": {
        "static": {
            "lines_of_code": 28,
            "num_tests": 4,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 4,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 56,
                    "missed": 27,
                    "coverage": 67.46987951807229
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 19,
                    "missed": 15,
                    "coverage": 55.88235294117647
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 16,
                    "missed": 7,
                    "coverage": 69.56521739130434
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 7,
                    "missed": 12,
                    "coverage": 36.84210526315789
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 25,
                "survived": 7,
                "no_coverage": 12,
                "detected": 25,
                "undetected": 19
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 1,
                    "survived": 7,
                    "detected": 1,
                    "undetected": 9,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 4,
                    "no_coverage": 4
                }
            }
        }
    },
    "trityp.gpt35Turbo.white.TritypTest": {
        "static": {
            "lines_of_code": 37,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 20,
                    "missed": 14,
                    "coverage": 58.82352941176471
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 8,
                    "missed": 11,
                    "coverage": 42.10526315789473
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 26,
                "survived": 7,
                "no_coverage": 11,
                "detected": 26,
                "undetected": 18
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 1,
                    "survived": 7,
                    "detected": 1,
                    "undetected": 9,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 5,
                    "survived": 0,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 3
                }
            }
        }
    },
    "trityp.gpt4oMini.black.TritypTest": {
        "static": {
            "lines_of_code": 48,
            "num_tests": 6,
            "num_assertions": 16
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 3,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 78,
                    "missed": 5,
                    "coverage": 93.97590361445783
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 27,
                    "missed": 7,
                    "coverage": 79.41176470588235
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 21,
                    "missed": 2,
                    "coverage": 91.30434782608695
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 11,
                    "missed": 8,
                    "coverage": 57.89473684210527
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.gpt4oMini.white.TritypTest": {
        "static": {
            "lines_of_code": 46,
            "num_tests": 5,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 66,
                    "missed": 17,
                    "coverage": 79.51807228915662
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 25,
                    "missed": 9,
                    "coverage": 73.52941176470588
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 20,
                    "missed": 3,
                    "coverage": 86.95652173913044
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 11,
                    "missed": 8,
                    "coverage": 57.89473684210527
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 31,
                "survived": 5,
                "no_coverage": 8,
                "detected": 31,
                "undetected": 13
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 3,
                    "survived": 5,
                    "detected": 3,
                    "undetected": 7,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 15,
                    "survived": 0,
                    "detected": 15,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 2,
                    "no_coverage": 2
                }
            }
        }
    },
    "trityp.gpt4o.black.TritypTest": {
        "static": {
            "lines_of_code": 39,
            "num_tests": 4,
            "num_assertions": 13
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 0,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 56,
                    "missed": 27,
                    "coverage": 67.46987951807229
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 19,
                    "missed": 15,
                    "coverage": 55.88235294117647
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 16,
                    "missed": 7,
                    "coverage": 69.56521739130434
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 7,
                    "missed": 12,
                    "coverage": 36.84210526315789
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.gpt4o.white.TritypTest": {
        "static": {
            "lines_of_code": 47,
            "num_tests": 6,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 78,
                    "missed": 5,
                    "coverage": 93.97590361445783
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 30,
                    "missed": 4,
                    "coverage": 88.23529411764706
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 21,
                    "missed": 2,
                    "coverage": 91.30434782608695
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 14,
                    "missed": 5,
                    "coverage": 73.68421052631578
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 35,
                "survived": 8,
                "no_coverage": 1,
                "detected": 35,
                "undetected": 9
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 2,
                    "survived": 8,
                    "detected": 2,
                    "undetected": 8,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 7,
                    "survived": 0,
                    "detected": 7,
                    "undetected": 1,
                    "no_coverage": 1
                }
            }
        }
    },
    "trityp.gpto1Mini.black.TritypTest": {
        "static": {
            "lines_of_code": 51,
            "num_tests": 5,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 0,
            "tests_failed": 5,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 56,
                    "missed": 27,
                    "coverage": 67.46987951807229
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 19,
                    "missed": 15,
                    "coverage": 55.88235294117647
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 16,
                    "missed": 7,
                    "coverage": 69.56521739130434
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 7,
                    "missed": 12,
                    "coverage": 36.84210526315789
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.gpto1Mini.white.TritypTest": {
        "static": {
            "lines_of_code": 65,
            "num_tests": 6,
            "num_assertions": 26
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 80,
                    "missed": 3,
                    "coverage": 96.3855421686747
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 33,
                    "missed": 1,
                    "coverage": 97.05882352941177
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 22,
                    "missed": 1,
                    "coverage": 95.65217391304348
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 17,
                    "missed": 2,
                    "coverage": 89.47368421052632
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 38,
                "survived": 6,
                "no_coverage": 0,
                "detected": 38,
                "undetected": 6
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 4,
                    "survived": 6,
                    "detected": 4,
                    "undetected": 6,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "trityp.metaAI.black.TritypTest": {
        "static": {
            "lines_of_code": 58,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 20,
                    "missed": 14,
                    "coverage": 58.82352941176471
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 8,
                    "missed": 11,
                    "coverage": 42.10526315789473
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.metaAI.white.TritypTest": {
        "static": {
            "lines_of_code": 78,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 58,
                    "missed": 25,
                    "coverage": 69.87951807228916
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 20,
                    "missed": 14,
                    "coverage": 58.82352941176471
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 17,
                    "missed": 6,
                    "coverage": 73.91304347826086
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 8,
                    "missed": 11,
                    "coverage": 42.10526315789473
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 25,
                "survived": 8,
                "no_coverage": 11,
                "detected": 25,
                "undetected": 19
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 0,
                    "survived": 8,
                    "detected": 0,
                    "undetected": 10,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 2
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 0,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 4
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 5,
                    "survived": 0,
                    "detected": 5,
                    "undetected": 3,
                    "no_coverage": 3
                }
            }
        }
    },
    "trityp.mistralSmall.black.TritypTest": {
        "static": {
            "lines_of_code": 48,
            "num_tests": 8,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 1,
            "tests_failed": 7,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 71,
                    "missed": 12,
                    "coverage": 85.54216867469879
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 24,
                    "missed": 10,
                    "coverage": 70.58823529411765
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 20,
                    "missed": 3,
                    "coverage": 86.95652173913044
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 9,
                    "missed": 10,
                    "coverage": 47.368421052631575
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.mistralSmall.white.TritypTest": {
        "static": {
            "lines_of_code": 59,
            "num_tests": 9,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 9,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 78,
                    "missed": 5,
                    "coverage": 93.97590361445783
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 28,
                    "missed": 6,
                    "coverage": 82.35294117647058
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 21,
                    "missed": 2,
                    "coverage": 91.30434782608695
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 12,
                    "missed": 7,
                    "coverage": 63.1578947368421
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 35,
                "survived": 8,
                "no_coverage": 1,
                "detected": 35,
                "undetected": 9
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 2,
                    "survived": 8,
                    "detected": 2,
                    "undetected": 8,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 17,
                    "survived": 0,
                    "detected": 17,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 7,
                    "survived": 0,
                    "detected": 7,
                    "undetected": 1,
                    "no_coverage": 1
                }
            }
        }
    },
    "trityp.mistralLarge.black.TritypTest": {
        "static": {
            "lines_of_code": 42,
            "num_tests": 5,
            "num_assertions": 14
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 71,
                    "missed": 12,
                    "coverage": 85.54216867469879
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 25,
                    "missed": 9,
                    "coverage": 73.52941176470588
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 20,
                    "missed": 3,
                    "coverage": 86.95652173913044
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 10,
                    "missed": 9,
                    "coverage": 52.63157894736842
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "trityp.mistralLarge.white.TritypTest": {
        "static": {
            "lines_of_code": 47,
            "num_tests": 6,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 83,
                    "covered": 71,
                    "missed": 12,
                    "coverage": 85.54216867469879
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 27,
                    "missed": 7,
                    "coverage": 79.41176470588235
                },
                "LINE": {
                    "name": "LINE",
                    "total": 23,
                    "covered": 20,
                    "missed": 3,
                    "coverage": 86.95652173913044
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 19,
                    "covered": 12,
                    "missed": 7,
                    "coverage": 63.1578947368421
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 1,
                    "missed": 1,
                    "coverage": 50.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 32,
                "survived": 7,
                "no_coverage": 5,
                "detected": 32,
                "undetected": 12
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 10,
                    "killed": 3,
                    "survived": 6,
                    "detected": 3,
                    "undetected": 7,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 6,
                    "killed": 4,
                    "survived": 1,
                    "detected": 4,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 16,
                    "survived": 0,
                    "detected": 16,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 8,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 2,
                    "no_coverage": 2
                }
            }
        }
    },
    "RegularExpressionMatching.ai21Jamba15Mini.black.RegularTest": {
        "static": {
            "lines_of_code": 62,
            "num_tests": 9,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 9,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 150,
                    "missed": 13,
                    "coverage": 92.02453987730061
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 28,
                    "missed": 6,
                    "coverage": 82.35294117647058
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 15,
                    "missed": 5,
                    "coverage": 75.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 28,
                "survived": 5,
                "no_coverage": 2,
                "detected": 28,
                "undetected": 7
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 3,
                    "survived": 1,
                    "detected": 3,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 12,
                    "survived": 4,
                    "detected": 12,
                    "undetected": 5,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.ai21Jamba15Mini.white.RegularTest": {
        "static": {
            "lines_of_code": 50,
            "num_tests": 8,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 5,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 28,
                    "missed": 6,
                    "coverage": 82.35294117647058
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 15,
                    "missed": 5,
                    "coverage": 75.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.ai21Jamba15Large.black.RegularTest": {
        "static": {
            "lines_of_code": 114,
            "num_tests": 13,
            "num_assertions": 13
        },
        "test": {
            "total_tests": 13,
            "tests_passed": 13,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.ai21Jamba15Large.white.RegularTest": {
        "static": {
            "lines_of_code": 64,
            "num_tests": 9,
            "num_assertions": 19
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 7,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.claude35Haiku.black.RegularTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 9,
            "num_assertions": 24
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 8,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.claude35Haiku.white.RegularTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 8,
            "num_assertions": 23
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 6,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.claude35Sonnet.black.RegularTest": {
        "static": {
            "lines_of_code": 99,
            "num_tests": 10,
            "num_assertions": 24
        },
        "test": {
            "total_tests": 19,
            "tests_passed": 19,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.claude35Sonnet.white.RegularTest": {
        "static": {
            "lines_of_code": 78,
            "num_tests": 8,
            "num_assertions": 31
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.gpt35Turbo.black.RegularTest": {
        "static": {
            "lines_of_code": 39,
            "num_tests": 5,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 29,
                "survived": 4,
                "no_coverage": 2,
                "detected": 29,
                "undetected": 6
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 12,
                    "survived": 4,
                    "detected": 12,
                    "undetected": 5,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.gpt35Turbo.white.RegularTest": {
        "static": {
            "lines_of_code": 19,
            "num_tests": 1,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 93,
                    "missed": 70,
                    "coverage": 57.05521472392638
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 11,
                    "missed": 23,
                    "coverage": 32.35294117647059
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 12,
                    "missed": 4,
                    "coverage": 75.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 4,
                    "missed": 16,
                    "coverage": 20.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.gpt4oMini.black.RegularTest": {
        "static": {
            "lines_of_code": 61,
            "num_tests": 6,
            "num_assertions": 27
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.gpt4oMini.white.RegularTest": {
        "static": {
            "lines_of_code": 66,
            "num_tests": 7,
            "num_assertions": 23
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 4,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.gpt4o.black.RegularTest": {
        "static": {
            "lines_of_code": 90,
            "num_tests": 16,
            "num_assertions": 16
        },
        "test": {
            "total_tests": 16,
            "tests_passed": 15,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.gpt4o.white.RegularTest": {
        "static": {
            "lines_of_code": 49,
            "num_tests": 6,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.gpto1Mini.black.RegularTest": {
        "static": {
            "lines_of_code": 132,
            "num_tests": 16,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 16,
            "tests_passed": 16,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.gpto1Mini.white.RegularTest": {
        "static": {
            "lines_of_code": 41,
            "num_tests": 1,
            "num_assertions": 1
        },
        "test": {
            "total_tests": 22,
            "tests_passed": 22,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.metaAI.black.RegularTest": {
        "static": {
            "lines_of_code": 73,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 150,
                    "missed": 13,
                    "coverage": 92.02453987730061
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 26,
                    "missed": 8,
                    "coverage": 76.47058823529412
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 13,
                    "missed": 7,
                    "coverage": 65.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 28,
                "survived": 5,
                "no_coverage": 2,
                "detected": 28,
                "undetected": 7
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 3,
                    "survived": 1,
                    "detected": 3,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 12,
                    "survived": 4,
                    "detected": 12,
                    "undetected": 5,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.metaAI.white.RegularTest": {
        "static": {
            "lines_of_code": 82,
            "num_tests": 8,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 150,
                    "missed": 13,
                    "coverage": 92.02453987730061
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 28,
                    "missed": 6,
                    "coverage": 82.35294117647058
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 15,
                    "missed": 5,
                    "coverage": 75.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 28,
                "survived": 5,
                "no_coverage": 2,
                "detected": 28,
                "undetected": 7
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 3,
                    "survived": 1,
                    "detected": 3,
                    "undetected": 2,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 12,
                    "survived": 4,
                    "detected": 12,
                    "undetected": 5,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.mistralSmall.black.RegularTest": {
        "static": {
            "lines_of_code": 120,
            "num_tests": 14,
            "num_assertions": 14
        },
        "test": {
            "total_tests": 14,
            "tests_passed": 14,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 28,
                    "missed": 6,
                    "coverage": 82.35294117647058
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 15,
                    "missed": 5,
                    "coverage": 75.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.mistralSmall.white.RegularTest": {
        "static": {
            "lines_of_code": 54,
            "num_tests": 5,
            "num_assertions": 21
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 2,
            "tests_failed": 3,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 30,
                    "missed": 4,
                    "coverage": 88.23529411764706
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 17,
                    "missed": 3,
                    "coverage": 85.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "RegularExpressionMatching.mistralLarge.black.RegularTest": {
        "static": {
            "lines_of_code": 92,
            "num_tests": 14,
            "num_assertions": 14
        },
        "test": {
            "total_tests": 14,
            "tests_passed": 14,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 152,
                    "missed": 11,
                    "coverage": 93.25153374233128
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 31,
                    "missed": 3,
                    "coverage": 91.17647058823529
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 15,
                    "missed": 1,
                    "coverage": 93.75
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 18,
                    "missed": 2,
                    "coverage": 90.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 30,
                "survived": 3,
                "no_coverage": 2,
                "detected": 30,
                "undetected": 5
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 8,
                    "killed": 8,
                    "survived": 0,
                    "detected": 8,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator",
                    "tests_run": 5,
                    "killed": 4,
                    "survived": 0,
                    "detected": 4,
                    "undetected": 1,
                    "no_coverage": 1
                },
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 2,
                    "killed": 2,
                    "survived": 0,
                    "detected": 2,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 17,
                    "killed": 13,
                    "survived": 3,
                    "detected": 13,
                    "undetected": 4,
                    "no_coverage": 1
                }
            }
        }
    },
    "RegularExpressionMatching.mistralLarge.white.RegularTest": {
        "static": {
            "lines_of_code": 34,
            "num_tests": 1,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 163,
                    "covered": 93,
                    "missed": 70,
                    "coverage": 57.05521472392638
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 34,
                    "covered": 11,
                    "missed": 23,
                    "coverage": 32.35294117647059
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 12,
                    "missed": 4,
                    "coverage": 75.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 20,
                    "covered": 4,
                    "missed": 16,
                    "coverage": 20.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.ai21Jamba15Mini.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 50,
            "num_tests": 3,
            "num_assertions": 0
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 1,
                "survived": 3,
                "no_coverage": 0,
                "detected": 1,
                "undetected": 3
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 1,
                    "survived": 2,
                    "detected": 1,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 0,
                    "survived": 1,
                    "detected": 0,
                    "undetected": 1,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.ai21Jamba15Mini.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 64,
            "num_tests": 4,
            "num_assertions": 20
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 2,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 79,
                    "missed": 3,
                    "coverage": 96.34146341463415
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 6,
                    "missed": 2,
                    "coverage": 75.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 4,
                    "missed": 2,
                    "coverage": 66.66666666666666
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.ai21Jamba15Large.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 118,
            "num_tests": 4,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 3,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 80,
                    "missed": 2,
                    "coverage": 97.5609756097561
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 7,
                    "missed": 1,
                    "coverage": 87.5
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 5,
                    "missed": 1,
                    "coverage": 83.33333333333334
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.ai21Jamba15Large.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 98,
            "num_tests": 5,
            "num_assertions": 27
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.claude35Haiku.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 102,
            "num_tests": 5,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.claude35Haiku.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 115,
            "num_tests": 5,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.claude35Sonnet.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 112,
            "num_tests": 5,
            "num_assertions": 30
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.claude35Sonnet.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 100,
            "num_tests": 5,
            "num_assertions": 24
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.gpt35Turbo.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 45,
            "num_tests": 1,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 80,
                    "missed": 2,
                    "coverage": 97.5609756097561
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 7,
                    "missed": 1,
                    "coverage": 87.5
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 5,
                    "missed": 1,
                    "coverage": 83.33333333333334
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.gpt35Turbo.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 50,
            "num_tests": 2,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 2,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.gpt4oMini.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 98,
            "num_tests": 4,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 3,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.gpt4oMini.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 104,
            "num_tests": 5,
            "num_assertions": 24
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.gpt4o.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 125,
            "num_tests": 5,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "cloneGraph.gpt4o.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 113,
            "num_tests": 5,
            "num_assertions": 27
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.gpto1Mini.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 261,
            "num_tests": 6,
            "num_assertions": 17
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 0,
                    "missed": 82,
                    "coverage": 0.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 0,
                    "missed": 8,
                    "coverage": 0.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 0,
                    "missed": 16,
                    "coverage": 0.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 0,
                    "missed": 6,
                    "coverage": 0.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 0,
                    "missed": 2,
                    "coverage": 0.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 0,
                    "missed": 1,
                    "coverage": 0.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 0,
                "survived": 0,
                "no_coverage": 4,
                "detected": 0,
                "undetected": 4
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 0,
                    "survived": 0,
                    "detected": 0,
                    "undetected": 3,
                    "no_coverage": 3
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 0,
                    "survived": 0,
                    "detected": 0,
                    "undetected": 1,
                    "no_coverage": 1
                }
            }
        }
    },
    "cloneGraph.gpto1Mini.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 184,
            "num_tests": 7,
            "num_assertions": 21
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 2,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.metaAI.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 58,
            "num_tests": 3,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 1,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 2,
                    "survived": 1,
                    "detected": 2,
                    "undetected": 1,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.metaAI.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 74,
            "num_tests": 4,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 4,
            "tests_passed": 4,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 3,
                "survived": 1,
                "no_coverage": 0,
                "detected": 3,
                "undetected": 1
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 2,
                    "survived": 1,
                    "detected": 2,
                    "undetected": 1,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.mistralSmall.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 89,
            "num_tests": 5,
            "num_assertions": 15
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.mistralSmall.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 79,
            "num_tests": 6,
            "num_assertions": 18
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.mistralLarge.black.CloneGraphTest": {
        "static": {
            "lines_of_code": 71,
            "num_tests": 3,
            "num_assertions": 11
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 3,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "cloneGraph.mistralLarge.white.CloneGraphTest": {
        "static": {
            "lines_of_code": 114,
            "num_tests": 5,
            "num_assertions": 27
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 5,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 82,
                    "covered": 82,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 8,
                    "covered": 8,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 16,
                    "covered": 16,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 6,
                    "covered": 6,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 2,
                    "covered": 2,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 4,
                "survived": 0,
                "no_coverage": 0,
                "detected": 4,
                "undetected": 0
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 3,
                    "killed": 3,
                    "survived": 0,
                    "detected": 3,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.ai21Jamba15Mini.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 47,
            "num_tests": 3,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 3,
            "tests_passed": 2,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.ai21Jamba15Mini.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 74,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 2,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.ai21Jamba15Large.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 104,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 6,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.ai21Jamba15Large.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 67,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 3,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.claude35Haiku.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 97,
            "num_tests": 9,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 7,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.claude35Haiku.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 95,
            "num_tests": 9,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 8,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.claude35Sonnet.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 107,
            "num_tests": 11,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 11,
            "tests_passed": 10,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.claude35Sonnet.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 104,
            "num_tests": 9,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 9,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpt35Turbo.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 34,
            "num_tests": 2,
            "num_assertions": 3
        },
        "test": {
            "total_tests": 2,
            "tests_passed": 2,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpt35Turbo.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 44,
            "num_tests": 1,
            "num_assertions": 4
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 1,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpt4oMini.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 93,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpt4oMini.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 87,
            "num_tests": 7,
            "num_assertions": 8
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 3,
            "tests_failed": 4,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.gpt4o.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 105,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpt4o.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 95,
            "num_tests": 8,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 8,
            "tests_passed": 8,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.gpto1Mini.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 96,
            "num_tests": 9,
            "num_assertions": 10
        },
        "test": {
            "total_tests": 9,
            "tests_passed": 7,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.gpto1Mini.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 100,
            "num_tests": 10,
            "num_assertions": 9
        },
        "test": {
            "total_tests": 10,
            "tests_passed": 9,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.metaAI.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 70,
            "num_tests": 5,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 5,
            "tests_passed": 4,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.metaAI.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 83,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 5,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.mistralSmall.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 83,
            "num_tests": 6,
            "num_assertions": 6
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 4,
            "tests_failed": 2,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.mistralSmall.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 55,
            "num_tests": 1,
            "num_assertions": 5
        },
        "test": {
            "total_tests": 1,
            "tests_passed": 0,
            "tests_failed": 1,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        }
    },
    "numIslands.mistralLarge.black.NumIslandsTest": {
        "static": {
            "lines_of_code": 83,
            "num_tests": 6,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 6,
            "tests_passed": 6,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    },
    "numIslands.mistralLarge.white.NumIslandsTest": {
        "static": {
            "lines_of_code": 87,
            "num_tests": 7,
            "num_assertions": 7
        },
        "test": {
            "total_tests": 7,
            "tests_passed": 7,
            "tests_failed": 0,
            "tests_skipped": 0
        },
        "jacoco": {
            "counters": {
                "INSTRUCTION": {
                    "name": "INSTRUCTION",
                    "total": 215,
                    "covered": 215,
                    "missed": 0,
                    "coverage": 100.0
                },
                "BRANCH": {
                    "name": "BRANCH",
                    "total": 24,
                    "covered": 24,
                    "missed": 0,
                    "coverage": 100.0
                },
                "LINE": {
                    "name": "LINE",
                    "total": 25,
                    "covered": 25,
                    "missed": 0,
                    "coverage": 100.0
                },
                "COMPLEXITY": {
                    "name": "COMPLEXITY",
                    "total": 15,
                    "covered": 15,
                    "missed": 0,
                    "coverage": 100.0
                },
                "METHOD": {
                    "name": "METHOD",
                    "total": 3,
                    "covered": 3,
                    "missed": 0,
                    "coverage": 100.0
                },
                "CLASS": {
                    "name": "CLASS",
                    "total": 1,
                    "covered": 1,
                    "missed": 0,
                    "coverage": 100.0
                }
            }
        },
        "pit": {
            "totals": {
                "killed": 19,
                "survived": 2,
                "no_coverage": 0,
                "detected": 20,
                "undetected": 2
            },
            "mutators": {
                "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator",
                    "tests_run": 6,
                    "killed": 6,
                    "survived": 0,
                    "detected": 6,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.MathMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.MathMutator",
                    "tests_run": 2,
                    "killed": 0,
                    "survived": 2,
                    "detected": 0,
                    "undetected": 2,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator",
                    "tests_run": 11,
                    "killed": 10,
                    "survived": 0,
                    "detected": 11,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                },
                "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator": {
                    "name": "org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator",
                    "tests_run": 1,
                    "killed": 1,
                    "survived": 0,
                    "detected": 1,
                    "undetected": 0,
                    "no_coverage": 0
                }
            }
        }
    }
}